_HiStOrY_V2_
\\c\040projections
\\cd\040code/Postgres.Projections/sql
\\i\040schema.sql
\\c\040projections
\\cd\040code/Postgres.Projections/sql
\\i\040schema.sql
\\c\040projections
\\cd\040code/Postgres.Projections/sql
\\i\040schema.sql
\\c\040projections
insert\040into\040pge_modules\040(name,\040definition)\040values\040('foo',\040'bar');
select\040*\040from\040pge_modules;
select\040*\040from\040pge_modules;
commit;
select\040*\040from\040pge_modules;
insert\040into\040pge_modules\040(name,\040definition)\040values\040('foo',\040'bar');
select\040table_name\040from\040information_schema.tables\040where\040table_name\040like\040'pge_%'\040order\040by\040table_name\^J;
select\040table_name\040from\040information_schema.tables\040where\040table_name\040like\040'pge_%'\040order\040by\040table_name\^J;;
select\040table_name\040from\040information_schema.tables\040where\040table_name\040like\040'pge_%'\040order\040by\040table_name\^J;;
select\040table_name\040from\040information_schema.tables\040where\040table_name\040like\040'pge_%'\040order\040by\040table_name\^J;;
select\040*\040from\040pge_modules;
select\040*\040from\040pge_modules;
select\040count(*)\040from\040pge_modules;
select\040count(*)\040from\040pge_modules;
select\040count(*)\040from\040pge_modules;
select\040count(*)\040from\040pge_modules;
select\040table_name\040from\040information_schema.tables\040where\040table_name\040like\040'pge_%'\040order\040by\040table_name\^J;;
select\040table_name\040from\040information_schema.tables\040where\040table_name\040like\040'pge_%'\040order\040by\040table_name;
select\040table_name\040from\040information_schema.tables\040where\040table_name\040like\040'pge_%'\040order\040by\040table_name;
select\040table_name\040from\040information_schema.tables\040where\040table_name\040like\040'pge_%'\040order\040by\040table_name;
select\040table_name\040from\040information_schema.tables\040where\040table_name\040like\040'pge_%'\040order\040by\040table_name;
select\040table_name\040from\040information_schema.tables\040where\040table_name\040like\040'pge_%'\040order\040by\040table_name;
\\c\040projections
select\040table_name\040from\040information_schema.tables\040where\040table_name\040like\040'pge_%'\040order\040by\040table_name;
select\040table_name\040from\040information_schema.tables\040where\040table_name\040like\040'pge_%'\040order\040by\040table_name;
select\040*\040from\040pge_modules;
select\040pge_initialize();
select\040uuid_generate_v1mc();
\\i\040initializer.sql;
\\i\040append_events.sql;
\\c\040projections
\\cd\040code/Postgres.Projections/lib/sql
\\ls
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\d\040pge_modules
\\d\040pge_modules
\\i\040testing.sql
\\i\040testing.sql
select\040definition\040from\040pge_modules\040where\040name\040=\040'Persistor'\^J;
select\040name\040from\040pge_modules;
select\040name\040from\040pge_modules;
select\040definition\040from\040pge_modules\040where\040name\040=\040'Persistor'\^J;
\\i\040testing.sql
\\i\040testing.sql
select\040definition\040from\040pge_modules\040where\040name\040=\040'Persistor';
\\i\040testing.sql
\\i\040testing.sql
select\040definition\040from\040pge_modules;
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
return\040plv8.execute('select\040uuid_generate_v1mc()');
return\040plv8.execute('select\040uuid_generate_v1mc()');
select\040uuid_generate_v1mc();
select\040uuid_generate_v1mc()\040as\040string;
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
select\040*\040from\040events;
select\040*\040from\040pge_events;
select\040*\040from\040pge_events;
select\040*\040from\040pge_events;
\\c\040projections
\\cd\040code/Postgres.Projections/lib/sql
\\i\040testing.sql
select\040*\040from\040pge_modules;
select\040name\040from\040pge_modules;
\\c\040projections
\\cd\040code/Postgres.Projections/lib/sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
drop\040function\040pge_append_event;
drop\040function\040pge_append_event\^J;
delete\040function\040pge_append_event\^J;
\\i\040testing.sql
\\i\040testing.sql
select\040id\040from\040pge_streams\^J;
select\040*\040from\040pge_events;
select\040pge_append_event('{"data":[{"$type":"TownReached","location":"Baerlon","traveled":5}],"id":"cb6a1301-f895-4112-a26d-2f651e79e3f5"}');
select\040pge_append_event('{"data":[{"$type":"TownReached","location":"Baerlon","traveled":5}],"id":"cb6a1301-f895-4112-a26d-2f651e79e3f5"}');
\\c\040projections
select\040*\040from\040pge_events;
select\040data\040from\040pge_events;
select\040data\040from\040pge_projections_party;
select\040data\040from\040pge_projections_party;
select\040data\040from\040pge_projections_party;
select\040data\040from\040pge_projections_party;
select\040data\040from\040pge_projections_party;
select\040data\040from\040pge_projections_Party;
select\040data\040from\040pge_events;
select\040data\040from\040pge_events;
select\040data\040from\040pge_projections_party;
\\c\040projections
\\i\040code/pg-events/lib/sql
\\cd\040code/pg-events/lib/sql
\\i\040initialize.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
/d\040pge_modules\^Jdesc\040pge_modules
\\d\040pge_modules
select\040name\040from\040pge_modules\^J;
select\040name\040from\040pge_modules;
select\040name\040from\040pge_projection_definitions;
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\c\040projections
\\d\040pge_streams
select\040snapshot_version\040from\040pge_streams;
\\c\040projections
\\cd\040code/pg-events/test/sql
\\cd\040code/pg-events/test
\\cd\040..
\\cd\040lib
\\cd\040sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
select\040name\040from\040pge_modules;
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\d\040pge_streams
select\040snapshot_version\040from\040pge_streams;
select\040*\040from\040pge_streams;
\\i\040testing.sql
select\040*\040from\040pge_streams\^J;
select\040*\040from\040pge_streams\^J;
select\040*\040from\040pge_streams\^J;
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
select\040*\040from\040pge_streams\^J;
select\040*\040from\040pge_events;
select\040*\040from\040pge_events;
select\040*\040from\040pge_streams\^J;
select\040*\040from\040pge_streams\^J;
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
select\040*\040from\040pge_events;
\\cd\040code
\\cd\040test
\\cd\040tests
\\ls
\\?
\\cd\040pg-events
\\cd\040tests
\\cd\040lib
\\cd\040sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
DROP\040SEQUENCE\040pge_rolling_buffer_sequence;
\\i\040testing.sql
DROP\040SEQUENCE\040pge_rolling_buffer_sequence;
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\i\040testing.sql
\\s\040projections
